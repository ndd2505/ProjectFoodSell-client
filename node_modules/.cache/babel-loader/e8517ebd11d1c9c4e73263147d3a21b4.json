{"ast":null,"code":"var _jsxFileName = \"/Users/DuyNguyen/workspace/ProjectFoodSell-client/src/component/User-View/PasswordChange.js\";\nimport React from \"react\";\nimport Cart from \"./cartPageSteper/Cart\";\nimport UserOrderInfo from \"./cartPageSteper/UserOrderInfo\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CompleteOrder from \"./cartPageSteper/CompleteOrder\";\nexport default function PasswordChange(props) {\n  const getStepContent = stepIndex => {\n    switch (stepIndex) {\n      case 0:\n        return React.createElement(Cart, {\n          next: handleNext,\n          hanldeTotal: hanldeTotal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(UserOrderInfo, {\n          next: handleNext,\n          total: total,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(CompleteOrder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n\n      default:\n        return 'Unknown stepIndex';\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, steps.map(label => React.createElement(Step, {\n    key: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(StepLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, label)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"All steps completed\"), React.createElement(Button, {\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(\"div\", {\n    style: {\n      marginLeft: \"150px\",\n      marginRight: \"150px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep !== 1,\n    onClick: handleBack,\n    className: classes.backButton,\n    variant: \"outlined\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Back\")))), getStepContent(activeStep));\n}","map":{"version":3,"sources":["/Users/DuyNguyen/workspace/ProjectFoodSell-client/src/component/User-View/PasswordChange.js"],"names":["React","Cart","UserOrderInfo","makeStyles","Stepper","Step","StepLabel","Button","Typography","CompleteOrder","PasswordChange","props","getStepContent","stepIndex","handleNext","hanldeTotal","total","setActiveStep","prevActiveStep","handleBack","handleReset","classes","root","activeStep","steps","map","label","length","instructions","marginLeft","marginRight","backButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Cart from \"./cartPageSteper/Cart\";\nimport UserOrderInfo from \"./cartPageSteper/UserOrderInfo\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CompleteOrder from \"./cartPageSteper/CompleteOrder\"\n\nexport default function PasswordChange(props){\n\n    const getStepContent=(stepIndex)=>{\n        switch (stepIndex) {\n          case 0:\n            return <Cart next={handleNext} hanldeTotal={hanldeTotal}/>;\n          case 1:\n            return <UserOrderInfo next={handleNext} total={total}/>;\n          case 2:\n            return <CompleteOrder />;\n          default:\n            return 'Unknown stepIndex';\n        }\n    }\n\n    const handleNext = () => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n            return(\n                <div className={classes.root}>\n                <Stepper activeStep={activeStep} alternativeLabel>\n                  {steps.map(label => (\n                    <Step key={label}>\n                      <StepLabel>{label}</StepLabel>\n                    </Step>\n                  ))}\n                </Stepper>\n                <div>\n                  {activeStep === steps.length ? (\n                    <div>\n                      <Typography className={classes.instructions}>All steps completed</Typography>\n                      <Button onClick={handleReset}>Reset</Button>\n                    </div>\n                  ) : (\n                    <div  style={{marginLeft: \"150px\", marginRight:\"150px\"}}>\n                      <Typography className={classes.instructions}></Typography>\n                      <div>\n                        <Button\n                          disabled={activeStep !== 1}\n                          onClick={handleBack}\n                          className={classes.backButton}\n                          variant=\"outlined\"\n                          color =\"secondary\"\n                        >\n                          Back\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                {getStepContent(activeStep)}\n              </div>\n        )\n}"]},"metadata":{},"sourceType":"module"}