{"ast":null,"code":"import _slicedToArray from \"/Users/DuyNguyen/workspace/ProjectFoodSell-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/DuyNguyen/workspace/ProjectFoodSell-client/src/component/User-View/CartPage.js\";\nimport React from \"react\";\nimport Cart from \"./cartPageSteper/Cart\";\nimport UserOrderInfo from \"./cartPageSteper/UserOrderInfo\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CompleteOrder from \"./cartPageSteper/CompleteOrder\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n    backgroundColor: \"black\"\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n    minWidth: \"100px\"\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return ['Choose Your Food', 'Give Us Your Info', 'Confirm your order'];\n}\n\nexport default function CartPage(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  const steps = getSteps();\n\n  const getStepContent = stepIndex => {\n    switch (stepIndex) {\n      case 0:\n        return React.createElement(Cart, {\n          next: handleNext,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n\n      case 1:\n        return React.createElement(UserOrderInfo, {\n          next: handleNext,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(CompleteOrder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n\n      default:\n        return 'Unknown stepIndex';\n    }\n  };\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, steps.map(label => React.createElement(Step, {\n    key: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(StepLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, label)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, activeStep === steps.length ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"All steps completed\"), React.createElement(Button, {\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(\"div\", {\n    style: {\n      marginLeft: \"150px\",\n      marginRight: \"150px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.instructions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.backButton,\n    variant: \"outlined\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Back\")))), getStepContent(activeStep));\n}","map":{"version":3,"sources":["/Users/DuyNguyen/workspace/ProjectFoodSell-client/src/component/User-View/CartPage.js"],"names":["React","Cart","UserOrderInfo","makeStyles","Stepper","Step","StepLabel","Button","Typography","CompleteOrder","useStyles","theme","root","width","backgroundColor","backButton","marginRight","spacing","minWidth","instructions","marginTop","marginBottom","getSteps","CartPage","props","classes","useState","activeStep","setActiveStep","steps","getStepContent","stepIndex","handleNext","prevActiveStep","handleBack","handleReset","map","label","length","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Cart from \"./cartPageSteper/Cart\";\nimport UserOrderInfo from \"./cartPageSteper/UserOrderInfo\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CompleteOrder from \"./cartPageSteper/CompleteOrder\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '90%',\n      backgroundColor:\"black\"\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n      minWidth: \"100px\"\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n\n    },\n  }));\n  \n  function getSteps() {\n    return ['Choose Your Food', 'Give Us Your Info', 'Confirm your order'];\n  }\n\nexport default function CartPage(props) {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const getStepContent=(stepIndex)=>{\n        switch (stepIndex) {\n          case 0:\n            return <Cart next={handleNext}/>;\n          case 1:\n            return <UserOrderInfo next={handleNext} />;\n          case 2:\n            return <CompleteOrder />;\n          default:\n            return 'Unknown stepIndex';\n        }\n      }\n\n    const handleNext = () => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n    \n    return(\n        <div className={classes.root}>\n        <Stepper activeStep={activeStep} alternativeLabel>\n          {steps.map(label => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <div>\n          {activeStep === steps.length ? (\n            <div>\n              <Typography className={classes.instructions}>All steps completed</Typography>\n              <Button onClick={handleReset}>Reset</Button>\n            </div>\n          ) : (\n            <div  style={{marginLeft: \"150px\", marginRight:\"150px\"}}>\n              <Typography className={classes.instructions}></Typography>\n              <div>\n                <Button\n                  disabled={activeStep === 0}\n                  onClick={handleBack}\n                  className={classes.backButton}\n                  variant=\"outlined\"\n                  color =\"secondary\"\n                >\n                  Back\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n        {getStepContent(activeStep)}\n      </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}